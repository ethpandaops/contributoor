name: release

on:
  push:
    tags:
      - '*'

permissions:
  contents: write
  packages: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Derive release suffix from tag (if it exists)
        run: |
          # Strip the 'refs/tags/' prefix
          TAG_NAME=${GITHUB_REF#refs/tags/}

          # Extract suffix from tag name after the last '-' (e.g., 'dencun' from 'v1.0.0-dencun')
          RELEASE_SUFFIX=${TAG_NAME##*-}

          # Check if the suffix is still a version pattern (e.g., 'v0.0.44'), in which case there's no suffix
          if [[ $RELEASE_SUFFIX =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            RELEASE_SUFFIX=""
          fi

          echo "RELEASE_SUFFIX=$RELEASE_SUFFIX" >> $GITHUB_ENV

          echo "Release suffix: $RELEASE_SUFFIX"

      - name: Set up Go
        uses: ./.github/workflows/go-setup

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Update GoReleaser config
        run: |
          cp .goreleaser.yaml .goreleaser.yaml.new

          # If we have a RELEASE_SUFFIX, update the goreleaser config to not set
          # the release as the latest
          if [[ -n "$RELEASE_SUFFIX" ]]; then
            echo "release:" >> .goreleaser.yaml.new
            echo "  prerelease: true" >> .goreleaser.yaml.new
            echo "  make_latest: false" >> .goreleaser.yaml.new
          fi

      - name: Release
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            -e GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} \
            -e DOCKER_USERNAME=${{ secrets.DOCKERHUB_USERNAME }} \
            -e DOCKER_PASSWORD=${{ secrets.DOCKERHUB_TOKEN }} \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -e RELEASE_SUFFIX=${{ env.RELEASE_SUFFIX }} \
            goreleaser/goreleaser-cross:v1.24.0 release --clean --config .goreleaser.yaml.new

  trigger-installer-update:
    needs: [goreleaser]
    runs-on: ubuntu-latest
    if: ${{ !contains(github.ref, '-') }}
    steps:
      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Trigger contributoor-installer update
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3.0.0
        with:
          token: ${{ secrets.PANDA_OPS_BOT_PAT }}
          repository: ethpandaops/contributoor-installer
          event-type: update-contributoor
          client-payload: '{"version": "${{ steps.get_version.outputs.VERSION }}"}'
