name: integration-tests

on:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Daily run to catch upstream changes

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  beacon-integration-test:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build contributoor image
      run: |
        docker build -f Dockerfile.ci -t ethpandaops/contributoor:local .
        echo "Contributoor image is built."

    - name: Setup kurtosis testnet
      id: kurtosis-setup
      uses: ethpandaops/kurtosis-assertoor-github-action@v1
      with:
        ethereum_package_args: .github/workflows/configs/kurtosis-network-params.yaml
        await_assertoor_tests: false
        enclave_name: contributoor-test

    - name: Show all kurtosis services
      env:
        SERVICES: ${{ steps.kurtosis-setup.outputs.services }}
      run: |
        echo "Kurtosis services:"
        echo $SERVICES
        # Save services JSON for the next step
        echo "$SERVICES" > /tmp/kurtosis-services.json

    - name: Test contributoor against each beacon node
      run: |
        # Extract beacon node endpoints from the services JSON
        BEACON_NODES=""
        for service in cl-1-teku-geth cl-2-prysm-nethermind cl-3-lighthouse-erigon cl-4-nimbus-besu cl-5-lodestar-reth cl-6-grandine-geth; do
          endpoint=$(jq -r ".\"$service\".http.url // empty" < /tmp/kurtosis-services.json)
          if [ -n "$endpoint" ]; then
            BEACON_NODES="${BEACON_NODES}${endpoint}\n"
          fi
        done
        
        if [ -z "$BEACON_NODES" ]; then
          echo "No beacon nodes found!"
          exit 1
        fi
        
        echo "Found beacon nodes:"
        echo -e "$BEACON_NODES"
        
        # Test each beacon node
        echo -e "$BEACON_NODES" | grep -v "^$" | while read -r beacon; do
          NODE_NAME=$(echo "$beacon" | sed 's|http://||' | cut -d':' -f1)
          echo ""
          echo "======================================"
          echo "Testing contributoor against $NODE_NAME"
          echo "Endpoint: $beacon"
          echo "======================================"
          
          # Run contributoor for 30 seconds
          timeout 30 docker run --rm \
            --name "contributoor-test-${NODE_NAME}" \
            --network "host" \
            ethpandaops/contributoor:local \
            --beacon-node-address="$beacon" \
            --output-server-address="localhost:8080" \
            --log-level=debug \
            --network=kurtosis \
            || EXIT_CODE=$?
          
          # Check if it ran without immediate failure (timeout returns 124)
          if [ "${EXIT_CODE:-0}" -eq 124 ]; then
            echo "✓ Contributoor successfully connected to $NODE_NAME"
          else
            echo "✗ Contributoor failed to connect to $NODE_NAME (exit code: ${EXIT_CODE:-0})"
            exit 1
          fi
        done
        
        echo ""
        echo "======================================"
        echo "✓ All beacon node tests passed!"
        echo "======================================"

    - name: Collect docker logs on failure
      if: failure()
      uses: jwalton/gh-docker-logs@v2
      with:
        dest: './logs'

    - name: Tar logs
      if: failure()
      run: tar cvzf ./logs.tgz ./logs

    - name: Upload logs to GitHub
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: logs.tgz
        path: ./logs.tgz
