syntax = "proto3";

package config.v1;

option go_package = "github.com/ethpandaops/contributoor/proto/config/v1;config";

// RunMethod defines how the service is run.
enum RunMethod {
  // Invalid, should not be used.
  RUN_METHOD_UNSPECIFIED = 0;
  // Run using docker.
  RUN_METHOD_DOCKER = 1;
  // Run using systemd/launchd service manager.
  RUN_METHOD_SYSTEMD = 2;
  // Run directly as a binary.
  RUN_METHOD_BINARY = 3;
}

// NetworkName defines which Ethereum network the beacon node is running on.
enum NetworkName {
  // Invalid, should not be used.
  NETWORK_NAME_UNSPECIFIED = 0;
  // Ethereum mainnet.
  NETWORK_NAME_MAINNET = 1;
  // Sepolia testnet.
  NETWORK_NAME_SEPOLIA = 2;
  // Holesky testnet.
  NETWORK_NAME_HOLESKY = 3;
}

// Config represents the main configuration for the contributoor service.
message Config {
  // LogLevel is the log level to use.
  string log_level = 1;
  // Version of the contributoor service running.
  string version = 2;
  // Directory where contributoor houses its configuration and related data.
  string contributoor_directory = 3;
  // RunMethod is the method used to run the contributoorservice.
  RunMethod run_method = 4;
  // NetworkName is the name of the network the beacon node is running on.
  NetworkName network_name = 5;
  // BeaconNodeAddress is the address of the beacon node.
  string beacon_node_address = 6;
  // OutputServer is the configuration for the output server.
  OutputServer output_server = 7;
}

// OutputServer represents configuration for the output server.
message OutputServer {
  // Address of the output server, eg: where the Xatu output server is running.
  string address = 1;
  // Optional credentials for authentication, this is a base64 encoded string in the format of "username:password".
  string credentials = 2;
} 